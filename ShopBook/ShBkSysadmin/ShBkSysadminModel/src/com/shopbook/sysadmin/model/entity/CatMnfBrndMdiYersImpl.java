package com.shopbook.sysadmin.model.entity;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 05 15:41:15 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CatMnfBrndMdiYersImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CmbmyCode,
        CatCode,
        MnfCode,
        BrandCode,
        ModelCode,
        Year,
        LastModified,
        Notes,
        Brands,
        Categories,
        Manufactures,
        Models,
        Years;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CMBMYCODE = AttributesEnum.CmbmyCode.index();
    public static final int CATCODE = AttributesEnum.CatCode.index();
    public static final int MNFCODE = AttributesEnum.MnfCode.index();
    public static final int BRANDCODE = AttributesEnum.BrandCode.index();
    public static final int MODELCODE = AttributesEnum.ModelCode.index();
    public static final int YEAR = AttributesEnum.Year.index();
    public static final int LASTMODIFIED = AttributesEnum.LastModified.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int BRANDS = AttributesEnum.Brands.index();
    public static final int CATEGORIES = AttributesEnum.Categories.index();
    public static final int MANUFACTURES = AttributesEnum.Manufactures.index();
    public static final int MODELS = AttributesEnum.Models.index();
    public static final int YEARS = AttributesEnum.Years.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CatMnfBrndMdiYersImpl() {
    }

    /**
     * Gets the attribute value for CmbmyCode, using the alias name CmbmyCode.
     * @return the value of CmbmyCode
     */
    public String getCmbmyCode() {
        return (String) getAttributeInternal(CMBMYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CmbmyCode.
     * @param value value to set the CmbmyCode
     */
    public void setCmbmyCode(String value) {
    String bfmy = getCatCode();
        if(getBrandCode()!= null) {
            bfmy = bfmy.concat(getBrandCode()); }
        if (getMnfCode()!= null) {
            bfmy = bfmy.concat(getMnfCode()); }
        if (getModelCode()!=null) {
            bfmy = bfmy.concat(getModelCode()); }
        if (getYear()!=null) {
            bfmy = bfmy.concat(getYear().toString()); }
        setAttributeInternal(CMBMYCODE, bfmy);
    }

    /**
     * Gets the attribute value for CatCode, using the alias name CatCode.
     * @return the value of CatCode
     */
    public String getCatCode() {
        return (String) getAttributeInternal(CATCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatCode.
     * @param value value to set the CatCode
     */
    public void setCatCode(String value) {
        setAttributeInternal(CATCODE, value);
    }

    /**
     * Gets the attribute value for MnfCode, using the alias name MnfCode.
     * @return the value of MnfCode
     */
    public String getMnfCode() {
        return (String) getAttributeInternal(MNFCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MnfCode.
     * @param value value to set the MnfCode
     */
    public void setMnfCode(String value) {
        setAttributeInternal(MNFCODE, value);
    }

    /**
     * Gets the attribute value for BrandCode, using the alias name BrandCode.
     * @return the value of BrandCode
     */
    public String getBrandCode() {
        return (String) getAttributeInternal(BRANDCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrandCode.
     * @param value value to set the BrandCode
     */
    public void setBrandCode(String value) {
        setAttributeInternal(BRANDCODE, value);
    }

    /**
     * Gets the attribute value for ModelCode, using the alias name ModelCode.
     * @return the value of ModelCode
     */
    public String getModelCode() {
        return (String) getAttributeInternal(MODELCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModelCode.
     * @param value value to set the ModelCode
     */
    public void setModelCode(String value) {
        setAttributeInternal(MODELCODE, value);
    }

    /**
     * Gets the attribute value for Year, using the alias name Year.
     * @return the value of Year
     */
    public Integer getYear() {
        return (Integer) getAttributeInternal(YEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Year.
     * @param value value to set the Year
     */
    public void setYear(Integer value) {
        setAttributeInternal(YEAR, value);
    }

    /**
     * Gets the attribute value for LastModified, using the alias name LastModified.
     * @return the value of LastModified
     */
    public Timestamp getLastModified() {
        return (Timestamp) getAttributeInternal(LASTMODIFIED);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastModified.
     * @param value value to set the LastModified
     */
    public void setLastModified(Timestamp value) {
        setAttributeInternal(LASTMODIFIED, value);
    }

    /**
     * Gets the attribute value for Notes, using the alias name Notes.
     * @return the value of Notes
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notes.
     * @param value value to set the Notes
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getBrands() {
        return (EntityImpl) getAttributeInternal(BRANDS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setBrands(EntityImpl value) {
        setAttributeInternal(BRANDS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCategories() {
        return (EntityImpl) getAttributeInternal(CATEGORIES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCategories(EntityImpl value) {
        setAttributeInternal(CATEGORIES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getManufactures() {
        return (EntityImpl) getAttributeInternal(MANUFACTURES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setManufactures(EntityImpl value) {
        setAttributeInternal(MANUFACTURES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getModels() {
        return (EntityImpl) getAttributeInternal(MODELS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setModels(EntityImpl value) {
        setAttributeInternal(MODELS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getYears() {
        return (EntityImpl) getAttributeInternal(YEARS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setYears(EntityImpl value) {
        setAttributeInternal(YEARS, value);
    }

    /**
     * @param cmbmyCode key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cmbmyCode) {
        return new Key(new Object[] { cmbmyCode });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.shopbook.sysadmin.model.entity.CatMnfBrndMdiYers");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
       
        if (operation == DML_INSERT || operation == DML_UPDATE) {
            setCmbmyCode("0000000");
 //         System.out.println(getCmbmyCode())  ;
        super.doDML(operation, e);
        } else if (operation == DML_DELETE) {
            super.doDML(operation, e);
        }
    }
}

